{           
    let i := callvalue()
    let mid := shr(selfbalance(), calldatasize())
    for{} and(
        lt(i, mid),
        eq(shr(248, calldataload(i)), shr(248, calldataload(sub(sub(calldatasize(), selfbalance()), i))))
    ) { i := add(i, selfbalance()) } {}
    mstore8(callvalue(), eq(i, mid))
    return(callvalue(), selfbalance())
}

// bytecode
// 3436471c5b81473603033560f81c823560f81c1481831016156025575b47820191506004565b80821434534734f3
// flip and concat
// 3436471c5b81473603033560f81c823560f81c1481831016156025575b47820191506004565b80821434534734f3f3344753341482805b56046050910182475b5725601516108381141cf86035821cf8603503033647815b1c473634
